package main

import (
	"net/url"

	_ "github.com/lib/pq" // here

	"github.com/jmoiron/sqlx"
)

var Schema = `
CREATE TABLE IF NOT EXISTS tgbot_flashbots_tx_participants (
	ChatId       bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Username     text NOT NULL,
    FirstName     text NOT NULL,
    LastName     text NOT NULL,
    IsSubscribed boolean NOT NULL,
	CreatedAt    TIMESTAMPTZ NOT NULL DEFAULT NOW()
);
`

func NewDatabaseConnection(cfg PostgresConfig) *sqlx.DB {
	sslMode := "require"
	if cfg.DisableTLS {
		sslMode = "disable"
	}

	q := make(url.Values)
	q.Set("sslmode", sslMode)
	q.Set("timezone", "utc")

	u := url.URL{
		Scheme:   "postgres",
		User:     url.UserPassword(cfg.User, cfg.Password),
		Host:     cfg.Host,
		Path:     cfg.Name,
		RawQuery: q.Encode(),
	}

	db := sqlx.MustConnect("postgres", u.String())
	db.MustExec(Schema)
	return db
}

type DbService struct {
	DB *sqlx.DB
}

func NewDbService(cfg PostgresConfig) *DbService {
	db := NewDatabaseConnection(cfg)
	return &DbService{
		DB: db,
	}
}

func (s *DbService) Reset() {
	s.DB.MustExec(`DROP TABLE "tgbot_flashbots_tx_participants";`)
	s.DB.MustExec(Schema)
}

func (s *DbService) Close() {
	s.DB.Close()
}

func (s *DbService) GetParticipants() (participants []*Participant, err error) {
	rows, err := s.DB.Queryx("SELECT * FROM tgbot_flashbots_tx_participants")
	if err != nil {
		return participants, err
	}
	for rows.Next() {
		var p Participant
		err = rows.StructScan(&p)
		if err != nil {
			return participants, err
		}
		participants = append(participants, &p)
	}
	return participants, nil
}

func (s *DbService) UpdateParticipant(p *Participant) {
	// If exists then update, else create
	var count int
	err := s.DB.QueryRow("SELECT COUNT(*) FROM tgbot_flashbots_tx_participants WHERE ChatId = $1", p.ChatId).Scan(&count)
	Perror(err)

	if count == 0 { // create
		s.DB.MustExec("INSERT INTO tgbot_flashbots_tx_participants (ChatId, Username, FirstName, LastName, IsSubscribed) VALUES ($1, $2, $3, $4, $5)", p.ChatId, p.Username, p.FirstName, p.LastName, p.IsSubscribed)
	} else { // update
		s.DB.MustExec("UPDATE tgbot_flashbots_tx_participants set Username=$1, FirstName=$2, LastName=$3, IsSubscribed=$4 WHERE ChatId=$5", p.Username, p.FirstName, p.LastName, p.IsSubscribed, p.ChatId)
	}
}
